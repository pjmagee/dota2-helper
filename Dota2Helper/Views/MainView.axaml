<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:Dota2Helper.ViewModels"
             xmlns:framework="clr-namespace:Dota2Helper.Core.Framework"
             xmlns:timers="clr-namespace:Dota2Helper.Core.Timers"
             mc:Ignorable="d"
             d:DataContext="{x:Static framework:DesignData.MainViewModel}"
             x:Class="Dota2Helper.Views.MainView" 
             x:DataType="vm:MainViewModel">
    <StackPanel Orientation="Vertical" Spacing="5">
       <DockPanel>
           <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" DockPanel.Dock="Right" Spacing="5">
               <Panel Margin="5,0">
                   <PathIcon IsVisible="{Binding IsSpeakerMuted}" Data="{DynamicResource speaker_off_regular}" />
                   <PathIcon IsVisible="{Binding IsSpeakerOn}" Data="{DynamicResource speaker_regular}" />
               </Panel>
               <Slider Width="100" x:Name="Slider" HorizontalAlignment="Center" Value="{Binding Volume}" TickPlacement="BottomRight" />
               <TextBlock Text="{Binding #Slider.Value, StringFormat={}{0:0}}" HorizontalAlignment="Center" Margin="15" />
           </StackPanel>
       </DockPanel>
       <ItemsControl ItemsSource="{Binding Path=Timers}">
           <ItemsControl.DataTemplates>
               <DataTemplate DataType="timers:DotaTimer">
                  <StackPanel Orientation="Horizontal" Spacing="5" Margin="0,1" >
                      
                      <TextBlock Width="100" Text="{Binding Path=Label}" TextAlignment="Right" VerticalAlignment="Center" />
                     
                      <TextBlock Width="45"
                                 VerticalAlignment="Center"
                                 Text="{Binding Path=TimeRemaining, StringFormat=mm\\:ss}"
                                 IsVisible="{Binding !IsReminderActive}" />
                      
                      <TextBlock Width="45"
                                 VerticalAlignment="Center"
                                 Text="{Binding Path=TimeRemaining, StringFormat=mm\\:ss}"
                                 Foreground="{DynamicResource SystemErrorTextColor}"
                                 FontWeight="Bold"
                                 IsVisible="{Binding IsReminderActive}" />
                      
                      <ToggleButton IsChecked="{Binding Mode=TwoWay, Path=IsSoundEnabled}">
                          <Panel>
                              <PathIcon Classes="audio-on" Data="{StaticResource speaker_regular}" />
                              <PathIcon Classes="audio-mute" Data="{StaticResource speaker_off_regular}" />
                          </Panel>
                      </ToggleButton>
                      <Button IsVisible="{Binding Mode=OneWay, Path=IsManualReset}" Command="{Binding Reset}">
                          <Panel>
                              <PathIcon Data="{StaticResource timer_10_regular}" />
                          </Panel>
                      </Button>
                      <NumericUpDown ShowButtonSpinner="False"
                                     VerticalContentAlignment="Center" 
                                     HorizontalContentAlignment="Center"
                                     Value="{Binding ReminderInSeconds, Mode=TwoWay}" 
                                     Increment="1" Minimum="5" 
                                     AllowSpin="True" Maximum="60" ParsingNumberStyle="Integer">
                      </NumericUpDown>
                  </StackPanel>
               </DataTemplate>
           </ItemsControl.DataTemplates>
       </ItemsControl>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" DockPanel.Dock="Right">
            <!-- this button switches to light theme -->
            <Button x:Name="Button" 
                    Content="{Binding ThemeName, Mode=OneWay}" 
                    Margin="0,0,10,10" 
                    Command="{Binding Theme}" />
        </StackPanel>
   </StackPanel>
</UserControl>
