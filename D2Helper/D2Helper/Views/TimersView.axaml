<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:D2Helper.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="280"
             x:Class="D2Helper.Views.TimersView"
             d:DataContext="{x:Type vm:TimersViewModel}"
             xmlns:icons="clr-namespace:FluentIcons.Avalonia;assembly=FluentIcons.Avalonia"
             xmlns:design="clr-namespace:D2Helper.Design"
             x:DataType="vm:TimersViewModel">
    <Design.DataContext>
        <design:DesignTimersViewModel />
    </Design.DataContext>
    <StackPanel Orientation="Vertical" Margin="2" Spacing="5">
        <!-- Setting and Game time -->
        <StackPanel Spacing="5" Margin="0"
                    Orientation="Horizontal">
            <Button Command="{Binding OpenSettingsCommand}">
                <Button.Content>
                    <icons:SymbolIcon Symbol="Settings" />
                </Button.Content>
            </Button>
            <TextBlock Text="{Binding Time}" VerticalAlignment="Center" />
        </StackPanel>

        <!-- Timers DataGrid -->
        <DataGrid
            IsReadOnly="True"
            HeadersVisibility="None"
            RowHeight="22"
            CanUserReorderColumns="False"
            CanUserResizeColumns="False"
            CanUserSortColumns="False"
            GridLinesVisibility="Horizontal"
            ItemsSource="{Binding Timers}">
            <DataGrid.Resources>
                <!-- Could not find a way to make row not hit test while maintain button hit test -->
                <SolidColorBrush x:Key="DataGridRowSelectedBackgroundBrush" Color="Transparent" />
                <SolidColorBrush x:Key="DataGridRowSelectedHoveredBackgroundBrush" Color="Transparent" />
                <SolidColorBrush x:Key="DataGridRowSelectedUnfocusedBackgroundBrush" Color="Transparent" />
                <SolidColorBrush x:Key="DataGridRowSelectedHoveredUnfocusedBackgroundBrush" Color="Transparent" />
                <SolidColorBrush x:Key="DataGridRowHoveredBackgroundColor" Color="Transparent" />
            </DataGrid.Resources>
            <DataGrid.Styles>
                <Style Selector="DataGridRow">
                    <Setter Property="IsVisible" Value="{Binding (vm:DotaTimerViewModel).IsVisible, Mode=OneWay}" />
                </Style>
                <!-- <Style Selector="DataGridRow"> -->
                <!--     <Setter Property="IsHitTestVisible" Value="False" /> -->
                <!-- </Style> -->
                <!-- <Style Selector="DataGridRow Button"> -->
                <!--     <Setter Property="IsHitTestVisible" Value="True" /> -->
                <!-- </Style> -->
                <!-- make button in cell hit test visible -->
            </DataGrid.Styles>
            <DataGrid.Columns>
                <DataGridTextColumn
                    Binding="{Binding Name}" Width="Auto" />
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="Remaining" IsHitTestVisible="False"
                                       Text="{Binding TimeRemaining}"
                                       IsVisible="{Binding IsVisible}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Margin="5 0"
                                    HorizontalContentAlignment="Center"
                                    IsHitTestVisible="True"
                                    x:Name="Reset"
                                    Command="{Binding ResetCommand}"
                                    IsVisible="{Binding IsResetRequired}">
                                <Button.Content>
                                    <icons:SymbolIcon Symbol="Timer" />
                                </Button.Content>
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </StackPanel>
</UserControl>